# lf (list files)
# https://medium.com/@a.hr.mostafavi/using-lf-file-manager-on-windows-fc4f1e4e1442
# https://github.com/ahrm/dotfiles/blob/main/lf-windows/lfrc

# https://pkg.go.dev/github.com/gokcehan/lf
# https://github.dev/gokcehan/lf
# https://github.com/gokcehan/lf

# reload config file using f5
# :source M:/Script/Pwsh/Cmdlet/lf/config/lfrc
map <f-5> push :source<space>M:/Script/Pwsh/Cmdlet/lf/config/lfrc<enter>

# edit this file
map <f-4> &code M:/Script/Pwsh/Cmdlet/lf/config/lfrc

###
### configuration
###

# custom file preview
unset COLORTERM
# set previewer "M:/Script/Pwsh/Cmdlet/lf/config/scripts/preview.ps1"
# set previewer "M:/Script/Pwsh/Cmdlet/lf/config/scripts/preview.bat"
set previewer "M:/Script/Pwsh/Cmdlet/lf/config/scripts/preview.cmd"

# set period 1
# interpreter for shell commands, on windows by default it is cmd
# if use pwsh, it is slow, and has redraw problem
# set shell pwsh -nologo -noninteractive -noprofile

# show icon beside the file name
set icons
# set drawbox
# set filesep ";" #default is '/n'
# leave some space at the top and the bottom of the screen
set scrolloff 10
# []string: info of file or directory: size, time(modification time), ctime(creation time), atime(last access time)
set info size:time
# jump to the first match after each keystroke during searching.
# after press 'enter', then 'n': next;'N':previous
set incsearch

# not work, test future version
# enable *?[][^] in search(/) and back-search(?)
# set globsearch
# show hidden files
set hidden


##################################################################
### commands
##################################################################
# change 'doc' command to use a different pager
cmd doc $lf -doc | less

##################################################################
###	cmd map
##################################################################

map <c-d> scroll-down
map <c-e> scroll-up
# half-up                  (default '<c-u>')
map <c-n> half-down

## navagation:
# up: <up> or <k>
# down: <down> or <j>
# right: <right> or <l>
# left: <left> or <h>
# home: <home> or <gg>
# end: <end> or <G>
# high: <H>
# middle: <M>
# low: <L>

# comment out because it easily triggered by the cancel : input
# map <esc> quit # the same as q
# cmd on-quit &{{cd %fx%;echo 'dddd'}}

### file management
# rename
# todo: need to auto redraw
cmd rename %sh -c 'mv -i %f% $0'
# cmd rename %mv -i $f $1
map r
# faster
map rr push :rename<space>
# map r push :rename<space> %f% # %f% in the command line not expanded, so have to use a script
# https://github.com/gokcehan/lf/issues/329
cmd rename-with-name &pwsh -nologo -noninteractive -noprofile -file M:/Script/Pwsh/Cmdlet/lf/config/scripts/rename.ps1
# a little slower
map rn rename-with-name

# create files and directories
# note $env:0 not work
# cmd createfile ${{
#   $file = Read-host 'New File Name'
#   new-item -path $file
# }}
# # cmd createfile !new-item
# cmd createdir ${{
#   $dir = Read-host 'New Directory Name'
#   new-item $dir -Type Directory; #redraw
# }}
# map a push :createfile<enter>;redraw
# map A push :createdir<enter>
cmd createfile %sh -c 'touch $0'
cmd createdir %sh -c 'mkdir $0'
map af push :createfile<space>
map ad push :createdir<space>

# selection
# map u
# unselect all
map su unselect
# map i
map si invert
map sgg push :glob-select<space>
map sgu push :glob-unselect<space>
# <space> toggle

## copy
# note: c is mapped to clear by default

# unmap y, it's yark by default
map y
map yy copy %fx%
# map Y %$env:fx | scb

# below code can only copy one file, maybe cause by the '`n' seperator
# cmd copy-current-path %echo %fx% | clip
# map yp copy-current-path

cmd copy-paths &pwsh -nologo -noninteractive -noprofile -file M:/Script/Pwsh/Cmdlet/lf/config/scripts/copy-paths.ps1
map yp copy-paths

# copy work directory
cmd copy-dir-path %echo %PWD%| clip
map yd copy-dir-path

# copy file names
cmd copy-names &pwsh -nologo -noninteractive -noprofile -file M:/Script/Pwsh/Cmdlet/lf/config/scripts/copy-names.ps1
map yn copy-names

## delete

# todo:trash not work
# cmd trash &Remove-ItemSafely env:fx env:1
# delete command is permanent deletion
map D delete
cmd trash-selected &pwsh -nologo -noninteractive -noprofile -file M:/Script/Pwsh/Cmdlet/lf/config/scripts/trash.ps1
map <delete> trash-selected

# map T push &wt<enter>

## open
# define a custom 'open' command
# This command is called when current file is not a directory.
# change the default open command to work in powerShell
# cmd open &start $Env:f

# change the editor used in default editor keybinding
# There is no builtin terminal editor installed in Windows. The default editor
# mapping uses 'notepad' which launches in a separate GUI window. You may
# instead install a terminal editor of your choice and replace the default
# editor keybinding accordingly.

# note: the right arrow triggers default open
# open file in code
cmd vsCode &code %f%
map oc vsCode
# open explorer in current directory
# cmd file-Explorer push &start.<enter>
cmd fileExplorer &explorer /n, /select, %fx%
map oe fileExplor
# map S push &start.<enter>

#default is e
cmd Notepad &Notepad %f%
map on Notepad

cmd open-With... &pwsh -nologo -noninteractive -noprofile -file M:/Script/Pwsh/Cmdlet/lf/config/scripts/openWith.ps1
map ow open-With...

# vim is there when we installed git
cmd Vim $vim %f%
map ov Vim

# map op !pwsh -nologo -noprofile -file M:/Script/Pwsh/Cmdlet/lf/config/scripts/properity.ps1
map op &GDProps.exe %fx%

# less is there when we installed git
# map i $less $Env:f

# archive management
# here we use sh to parse in the argument $0
cmd zip-to %sh -c '7z a $0 %fx%'
cmd extract-to %sh -c '7z  x %f% -o$0'
cmd extract-here %7z x %f%
cmd extract_auto %7z x %f% -o%f%
cmd extract_and_remove %sh -c '7z x %f% -o%f%_ && rm %f%'

cmd zip-to-file push :zip-to<space>
map zz zip-to-file
# map zut push :extract-to<space>
cmd extract-to-folder push :extract-to<space>
map zut extract-to-folder
cmd extract-to-here push :extract-here<enter>
map zuh extract-to-here
map zur push :extract_and_remove<enter>


# quick preview
# v: default is invert select
# press v again to hide the preview window
map v &C:\app\QuickLook\QuickLook.exe %f%


# # must have at least a file in it
# cmd bookmark %sh -c 'python D:/lf_scripts/bookmark.py %f% $0'
# cmd goto_bookmark push $python<space>D:/lf_scripts/goto_bookmark.py<space>%id%<enter>
# map B push :bookmark<space>
# map b push :goto_bookmark<enter>

# # map F push :filter<enter>
# # map gF push :setfilter<enter>

# # # drag and drop
cmd drag push &python<space>M:/Script/Pwsh/Cmdlet/lf/config/scripts/drag.py<space>multi<space>%fx%<enter>
cmd dragonce push &python<space>M:/Script/Pwsh/Cmdlet/lf/config/scripts/drag.py<space>once<space>%fx%<enter>
# cmd dragonce &explorer M:/Script/Pwsh/Cmdlet/lf/config/scripts/drag.bat
map <c-t> push :dragonce<enter> # c-d is used for scroll down

# # use c-f to fuzzy search
cmd file-search push $python<space>M:/Script/Pwsh/Cmdlet/lf/config/scripts/fzfpy.py<space>%id%<enter>
map <c-f> :file-search

# # cmd send_to_mobile %sh -c 'scp -P 2222 hex@192.168.1.151: %fx%'
# cmd send_to_mobile push $scp<space>-P<space>2222<space>%fx%<space>hex@192.168.1.151:<enter>
# cmd send_to_tablet push $scp<space>-P<space>2222<space>%fx%<space>hex@192.168.1.150:<enter>
# map st push :send_to_tablet<enter>
# map sm push :send_to_mobile<enter>

# Shell commands with multiline definitions and/or positional arguments and/or
# quotes do not work in Windows. For anything but the simplest shell commands,
# it is recommended to create separate script files and simply call them here
# in commands or mappings.
#
# Also, the default keybindings are defined using cmd syntax (i.e. '%EDITOR%')
# which does not work with powershell. Therefore, you need to override these
# keybindings with explicit choices accordingly.


# change the pager used in default pager keybinding
# The standard pager used in Windows is 'more' which is not a very capable
# pager. You may instead install a pager of your choice and replace the default
# pager keybinding accordingly.
# use bat as a pager
# ! to wait after the command executed, and press any key to return to lf
map i !bat %f%

# change the shell used in default shell keybinding
# map w $pwsh



# use enter for shell commands
# map <enter> shell

## execute current file (must be executable)
# # execute with shell
# map x $$f
# # execute with shell_wait
# map X !$f


##################################################################
### command line map (cmap)
##################################################################

# c-p
cmap <up> cmd-history-prev
# a-f
cmap <down> cmd-history-next
# a-backspace
# below not work
# cmap <c-backspace> cmd-delete-word-back

# a-d
# below not work
# camp <a-delete> cmd-delete-word
# camp <c-delete> cmd-delete-word

# enable use right arrow key to move cursor, otherwise it will open the file highlighted
cmap <right> cmd-right

# during search to open
# use 'cmd-escape' to cancel the search
cmap <a-right> :cmd-enter; open

# <c-f>
cmap <c-right> cmd-word
# <c-b>
cmap <c-left> cmd-word-back


