# https://medium.com/@a.hr.mostafavi/using-lf-file-manager-on-windows-fc4f1e4e1442
# https://github.com/ahrm/dotfiles/blob/main/lf-windows/lfrc
# https://pkg.go.dev/github.com/gokcehan/lf
# https://github.dev/gokcehan/lf

set icons
# set drawbox
set filesep ";"
# leave some space at the top and the bottom of the screen
set scrolloff 10
set info size:time
# set period 1
# interpreter for shell commands, on windows by default it is cmd
# set shell pwsh
# reload config file using f5
map <f-5> push :source<space>M:/Script/Pwsh/Cmdlet/lf/config/lfrc<enter>

## file management
# rename
# todo: need to auto redraw
cmd rename %sh -c 'mv -i %f% $0'
map r
# faster
map rr push :rename<space>
# map r push :rename<space> %f% # %f% in the command line not expanded, so have to use a script
# https://github.com/gokcehan/lf/issues/329
cmd rename-with-name &pwsh -nologo -noninteractive -noprofile -file M:/Script/Pwsh/Cmdlet/lf/config/scripts/rename.ps1
# a little slower
map rn rename-with-name
# delete
map <delete> delete
# create files and directories
cmd createfile %sh -c 'touch $0'
cmd createdir %sh -c 'mkdir $0'
map af push :createfile<space>
map ad push :createdir<space>
# selection
# map u
map su unselect
# map i
map si invert
# <space> toggle

## copy
# unmap y, it's yark by default
map y
map yy copy %fx%
# copy file path; note: c is mapped to clear by default
map yp %echo %fx% | clip
# copy work directory
map yd %echo %PWD%| clip
# copy current file names
cmd copy-file-name &pwsh -nologo -noninteractive -noprofile -file M:/Script/Pwsh/Cmdlet/lf/config/scripts/copy-fileName.ps1
map yn copy-file-name

# map T push &wt<enter>

## open
# open file in code
map oc &code %f%
# open explorer in current directory
map oe push &start.<enter>
#default is e
map on & notepad %f%

# archive management
cmd zip-to %sh -c 'c:/app/7-zip/7z a $0 %fx%'
cmd extract-to %sh -c 'c:/app/7-zip/7z  e %f% -o$0'
cmd extract-here %sh -c 'c:/app/7-zip/7z e %f%'
cmd extract_auto %sh -c 'c:/app/7-zip/7z e %f% -o%f%'
cmd extract_auto_and_remove %sh -c 'c:/app/7-zip/7z e %f% -o%f%_extracted && rm %f%'

map zz push :zip-to<space>
map zut push :extract-to<space>
map zuh push :extract-here<enter>
# map X push :extract_auto_and_remove<enter>

# quick preview
# v: default is invert select
# press v again to hide the preview window
map v &C:\app\QuickLook\QuickLook.exe %f%
# # custom file preview
# set previewer "D:\\lf_scripts\\preview.bat"

# # use c-f to fuzzy search
# cmd fzf_jump push $python<space>D:/lf_scripts/fzfpy.py<space>%id%<enter>
# map <c-f> :fzf_jump

# # must have at least a file in it
# cmd bookmark %sh -c 'python D:/lf_scripts/bookmark.py %f% $0'
# cmd goto_bookmark push $python<space>D:/lf_scripts/goto_bookmark.py<space>%id%<enter>
# map B push :bookmark<space>
# map b push :goto_bookmark<enter>

# # map F push :filter<enter>
# # map gF push :setfilter<enter>

# # # drag and drop
# cmd drag push &python<space>%%/drag.py<space>multi<space>%fx%<enter>
# cmd dragonce push &python<space>D:/lf_scripts/drag.py<space>once<space>%fx%<enter>
# map D push :dragonce<enter>

# # use c-f to fuzzy search
# cmd fzf_jump push $python<space>D:/lf_scripts/fzfpy.py<space>%id%<enter>
# map <c-f> :fzf_jump



# # cmd send_to_mobile %sh -c 'scp -P 2222 hex@192.168.1.151: %fx%'
# cmd send_to_mobile push $scp<space>-P<space>2222<space>%fx%<space>hex@192.168.1.151:<enter>
# cmd send_to_tablet push $scp<space>-P<space>2222<space>%fx%<space>hex@192.168.1.150:<enter>
# map st push :send_to_tablet<enter>
# map sm push :send_to_mobile<enter>

# define a custom 'open' command
# This command is called when current file is not a directory.

# Shell commands with multiline definitions and/or positional arguments and/or
# quotes do not work in Windows. For anything but the simplest shell commands,
# it is recommended to create separate script files and simply call them here
# in commands or mappings.
#
# Also, the default keybindings are defined using cmd syntax (i.e. '%EDITOR%')
# which does not work with powershell. Therefore, you need to override these
# keybindings with explicit choices accordingly.

# change the default open command to work in powerShell
# cmd open &start $Env:f

# change the editor used in default editor keybinding
# There is no builtin terminal editor installed in Windows. The default editor
# mapping uses 'notepad' which launches in a separate GUI window. You may
# instead install a terminal editor of your choice and replace the default
# editor keybinding accordingly.

# vim is there when we installed git
# map e $vim $Env:f

# change the pager used in default pager keybinding
# The standard pager used in Windows is 'more' which is not a very capable
# pager. You may instead install a pager of your choice and replace the default
# pager keybinding accordingly.

# less is there when we installed git
# map i $less $Env:f

# change the shell used in default shell keybinding
# map w $pwsh

# change 'doc' command to use a different pager
cmd doc $a lf -doc | less

# use enter for shell commands
# map <enter> shell

## execute current file (must be executable)
# # execute with shell
# map x $$f
# # execute with shell_wait
# map X !$f
# map P &a quicklook -- $env:f
## delete
# note: $f is current selected file, $fs is selected files, $fx is $fs if select many else it is $f
# todo:trash not work
# cmd trash &Remove-ItemSafely env:fx env:1

# use a and A to create files and directories
# note $env:0 not work
# cmd createfile ${{
#   $file = Read-host 'New File Name'
#   new-item -path $file
# }}
# # cmd createfile !new-item
# cmd createdir ${{
#   $dir = Read-host 'New Directory Name'
#   new-item $dir -Type Directory; #redraw
# }}
# map a push :createfile<enter>;redraw
# map A push :createdir<enter>

# map Y %$env:fx | scb
# cmd rename %mv -i $f $1
# map R push :rename

## command line commands
# c-p
cmap <up> cmd-history-prev
# c-n
cmap <down> cmd-history-next